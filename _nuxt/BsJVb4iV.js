const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./LCB-Ztsp.js","./CGgqm_Kh.js","./entry.i2GymcVm.css"])))=>i.map(i=>d[i]);
import{I as g}from"./CGgqm_Kh.js";import{c as w,t as d,a as u,f as p}from"./D2CLkD3z.js";async function S(r,a="gzip"){var c;const e=Uint8Array.from(atob(r),l=>l.charCodeAt(0)),n=(c=new Response(new Blob([e])).body)==null?void 0:c.pipeThrough(new DecompressionStream(a)),i=await new Response(n).text();return JSON.parse(i)}function f(r,a){const e=b(r),t={...a};for(const n in t)e[n]==="json"&&t[n]&&t[n]!=="undefined"&&(t[n]=JSON.parse(t[n])),e[n]==="boolean"&&t[n]!=="undefined"&&(t[n]=!!t[n]);for(const n in t)t[n]==="NULL"&&(t[n]=void 0);return t}function b(r){const a=r.match(/FROM\s+(\w+)/);if(!a)return{};const e=w[h(a[1])];return(e==null?void 0:e.fields)||{}}function h(r){return r.replace(/^_content_/,"")}let o;const m={},s={};function x(r){async function a(e){return o||(s._=s._||_(),o=await s._,Reflect.deleteProperty(s,"_")),m[String(e)]||(s[String(e)]=s[String(e)]||y(e),await s[String(e)],m[String(e)]="loaded",Reflect.deleteProperty(s,String(e))),o}return{all:async(e,t)=>(await a(r),o.exec({sql:e,bind:t,rowMode:"object",returnValue:"resultRows"}).map(n=>f(e,n))),first:async(e,t)=>(await a(r),f(e,o.exec({sql:e,bind:t,rowMode:"object",returnValue:"resultRows"}).shift())),exec:async(e,t)=>{await a(r),await o.exec({sql:e,bind:t})}}}async function _(){if(!o){const r=await g(()=>import("./LCB-Ztsp.js"),__vite__mapDeps([0,1,2]),import.meta.url).then(e=>e.default);globalThis.sqlite3ApiConfig={silent:!0,debug:(...e)=>{},warn:(...e)=>{String(e[0]).includes("OPFS sqlite3_vfs")},error:(...e)=>{},log:(...e)=>{}};const a=await r();o=new a.oo1.DB}return o}async function y(r){if(window.sessionStorage.getItem("previewToken"))return o;let a=null;const e=`checksum_${r}`,t=`collection_${r}`;let n="matched";try{const i=o.exec({sql:`SELECT * FROM ${d.info} where id = '${e}'`,rowMode:"object",returnValue:"resultRows"}).shift();(i==null?void 0:i.version)!==u[String(r)]&&(n="mismatch")}catch{n="missing"}if(n!=="matched"){if(window.localStorage.getItem(`content_${e}`)===u[String(r)]&&(a=window.localStorage.getItem(`content_${t}`)),!a){a=await p(void 0,String(r));try{window.localStorage.setItem(`content_${e}`,u[String(r)]),window.localStorage.setItem(`content_${t}`,a)}catch{}}const i=await S(a);await o.exec({sql:`DROP TABLE IF EXISTS ${d[String(r)]}`}),n==="mismatch"&&await o.exec({sql:`DELETE FROM ${d.info} WHERE id = '${e}'`});for(const c of i)try{await o.exec(c)}catch{}}return o}export{x as loadDatabaseAdapter};
